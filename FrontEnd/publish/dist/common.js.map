{"version":3,"sources":["./node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA,EAAE,KAA4D;AAC9D,EAAE,SACkE;AACpE,CAAC,2BAA2B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sDAAsD;;AAEtD;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA,sCAAsC;;AAEtC;AACA;;AAEA,gDAAgD,cAAc;;AAE9D,CAAC;AACD","file":"common.js","sourcesContent":["(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n  (global = global || self, factory(global['custom-tooltips'] = {}));\r\n}(this, function (exports) { 'use strict';\r\n\r\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.3.1): custom-tooltips.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\r\n  function CustomTooltips(tooltipModel) {\r\n    var _this = this;\r\n\r\n    // Add unique id if not exist\r\n    var _setCanvasId = function _setCanvasId() {\r\n      var _idMaker = function _idMaker() {\r\n        var _hex = 16;\r\n        var _multiplier = 0x10000;\r\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\r\n      };\r\n\r\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\r\n\r\n      _this._chart.canvas.id = _canvasId;\r\n      return _canvasId;\r\n    };\r\n\r\n    var ClassName = {\r\n      ABOVE: 'above',\r\n      BELOW: 'below',\r\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\r\n      NO_TRANSFORM: 'no-transform',\r\n      TOOLTIP_BODY: 'tooltip-body',\r\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\r\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\r\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\r\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\r\n      TOOLTIP_HEADER: 'tooltip-header',\r\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\r\n    };\r\n    var Selector = {\r\n      DIV: 'div',\r\n      SPAN: 'span',\r\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\r\n    };\r\n    var tooltip = document.getElementById(Selector.TOOLTIP);\r\n\r\n    if (!tooltip) {\r\n      tooltip = document.createElement('div');\r\n      tooltip.id = Selector.TOOLTIP;\r\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\r\n\r\n      this._chart.canvas.parentNode.appendChild(tooltip);\r\n    } // Hide if no tooltip\r\n\r\n\r\n    if (tooltipModel.opacity === 0) {\r\n      tooltip.style.opacity = 0;\r\n      return;\r\n    } // Set caret Position\r\n\r\n\r\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\r\n\r\n    if (tooltipModel.yAlign) {\r\n      tooltip.classList.add(tooltipModel.yAlign);\r\n    } else {\r\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\r\n    } // Set Text\r\n\r\n\r\n    if (tooltipModel.body) {\r\n      var titleLines = tooltipModel.title || [];\r\n      var tooltipHeader = document.createElement(Selector.DIV);\r\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\r\n      titleLines.forEach(function (title) {\r\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\r\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\r\n        tooltipHeaderTitle.innerHTML = title;\r\n        tooltipHeader.appendChild(tooltipHeaderTitle);\r\n      });\r\n      var tooltipBody = document.createElement(Selector.DIV);\r\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\r\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\r\n        return item.lines;\r\n      });\r\n      tooltipBodyItems.forEach(function (item, i) {\r\n        var tooltipBodyItem = document.createElement(Selector.DIV);\r\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\r\n        var colors = tooltipModel.labelColors[i];\r\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\r\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\r\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\r\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\r\n\r\n        if (item[0].split(':').length > 1) {\r\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\r\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\r\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\r\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\r\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\r\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\r\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\r\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\r\n        } else {\r\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\r\n\r\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\r\n          _tooltipBodyItemValue.innerHTML = item[0];\r\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\r\n        }\r\n\r\n        tooltipBody.appendChild(tooltipBodyItem);\r\n      });\r\n      tooltip.innerHTML = '';\r\n      tooltip.appendChild(tooltipHeader);\r\n      tooltip.appendChild(tooltipBody);\r\n    }\r\n\r\n    var position = this._chart.canvas.getBoundingClientRect();\r\n\r\n    var positionY = this._chart.canvas.offsetTop;\r\n    var positionX = this._chart.canvas.offsetLeft;\r\n    var positionLeft = positionX + tooltipModel.caretX;\r\n    var positionTop = positionY + tooltipModel.caretY; // eslint-disable-next-line\r\n\r\n    var halfWidth = tooltipModel.width / 2;\r\n\r\n    if (positionLeft + halfWidth > position.width) {\r\n      positionLeft -= halfWidth;\r\n    } else if (positionLeft < halfWidth) {\r\n      positionLeft += halfWidth;\r\n    } // Display, position, and set styles for font\r\n\r\n\r\n    tooltip.style.opacity = 1;\r\n    tooltip.style.left = positionLeft + \"px\";\r\n    tooltip.style.top = positionTop + \"px\";\r\n  }\r\n\r\n  var customTooltips = CustomTooltips; // TODO: camel-case\r\n\r\n  exports.CustomTooltips = CustomTooltips;\r\n  exports.customTooltips = customTooltips;\r\n\r\n  Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n}));\r\n//# sourceMappingURL=custom-tooltips.js.map\r\n"],"sourceRoot":"webpack:///"}